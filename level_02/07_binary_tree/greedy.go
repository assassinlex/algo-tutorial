package _7_binary_tree

/**
 * 贪心算法 [greedy algorithm]
 *
 * 定义[维基百科]:
 *      又称贪婪算法, 是一种在每一步选择中都采取在当前状态下最好或最优(即最有利)的选择,
 *      从而希望导致结果是最好或最优的算法.
 *
 * 适用场景:
 *      贪心算法在有最优子结构的问题中尤为有效.
 *      最优子结构的意思是局部最优解能决定全局最优解.
 *      简单地说, 问题能够分解成子问题来解决, 子问题的最优解能递推到最终问题的最优解.
 *      诸如: 求图中的最小生成树, 求哈夫曼编码等问题
 *
 * 比较动态规划:
 *      贪心算法与动态规划的不同在于它对每个子问题的解决方案都做出选择, 不能回退.
 *      动态规划则会保存以前的运算结果, 并根据以前的结果对当前进行选择，有回退功能.
 */
